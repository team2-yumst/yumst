plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "6.0.1.5171"
	id 'jacoco'
}


subprojects {
	apply plugin: 'org.sonarqube'

	sonar {
		properties {
			property 'sonar.java.binaries', "${buildDir}/classes"
			// jacoco-aggregation을 사용하지 않은 경우 각 프로젝트의 buildDir마다 따로 적용
			property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco.xml"
		}
	}
}

sonar {
	properties {
		property "sonar.projectKey", "team2-yumst_yumst"
		property "sonar.organization", "yumst-sonarcloud"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.sources', 'src'
		property 'sonar.language', 'java'
		property 'sonar.sourceEncoding', 'UTF-8'
		property "sonar.profile", "Sonar way"
		property 'sonar.test.inclusions', '**/*Test.java'
		property 'sonar.exclusions', '**/Q*.java, **/config/**'
		property 'sonar.java.coveragePlugin', 'jacoco'
	}
}

group = 'com.yumst'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

